generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  email      String     @unique
  password   String
  name       String?
  userName   String?    @unique
  bio        String?
  createdAt  DateTime   @default(now())
  posts      Post[]
  friends    User[]     @relation("Friends")
  Session    Session[]
  Categories Category[]
  Streaks    Streak[]

  User User[] @relation("Friends")
}

model Session {
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Post {
  id         Int       @id @default(autoincrement())
  title      String
  content    String?
  published  Boolean   @default(false)
  author     User      @relation(fields: [authorId], references: [id])
  authorId   Int
  image      String?
  Category   Category? @relation(fields: [categoryId], references: [id])
  categoryId Int?
}

model Category {
  id      Int      @id @default(autoincrement())
  name    String
  posts   Post[]
  users   User[]
  streaks Streak[]
}

model Streak {
  id       Int      @id @default(autoincrement())
  userId   Int     
  user    User     @relation(fields: [userId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])
  categoryId Int 
  currentStreak Int @default(0)
  @@unique([userId, categoryId])
}
